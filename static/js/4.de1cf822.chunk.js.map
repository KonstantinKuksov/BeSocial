{"version":3,"sources":["components/hoc/withAuthRedirect.jsx","../../react_components/index.js","../../react_components/PaginationBoxView.js","../../react_components/PageView.js","../../react_components/BreakView.js","components/Users/Users.module.css","redux/UsersSelectors.js","components/Users/Users.jsx","components/Users/UsersContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","PaginationBoxView","evt","selected","pageCount","selectedItem","items","pageRangeDisplayed","marginPagesDisplayed","breakLabel","breakClassName","breakLinkClassName","index","leftSide","rightSide","page","breakView","createPageView","key","onClick","initialSelected","initialPage","disableInitialCallback","extraAriaContext","console","prevProps","forcePage","forwardJump","backwardJump","pageIndex","hrefBuilder","ariaLabelBuilder","label","pageClassName","pageLinkClassName","activeClassName","activeLinkClassName","handlePageSelected","bind","href","ariaLabel","disabledClassName","previousClassName","nextClassName","containerClassName","previousLinkClassName","previousLabel","nextLinkClassName","nextLabel","previousClasses","nextClasses","previousAriaDisabled","nextAriaDisabled","className","tabIndex","role","onKeyPress","aria-disabled","propTypes","PropTypes","onPageChange","func","defaultProps","PageView","ariaCurrent","aria-label","aria-current","isRequired","BreakView","module","exports","getUsers","usersPage","users","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getPageSize","pageSize","getIsFetching","isFetching","getIsFollowingInProgress","isFollowingInProgress","Users","Math","ceil","styles","container","Preloader","paginatorItems","paginatorItemsActive","c","paginator","data","setCurrentPage","next","previous","break","map","user","id","avatar","img","src","photos","small","userPhoto","alt","followed","disabled","some","unfollow","followButton","follow","info","name","status","location","buttonContainer","moreButton","UsersAPIContainer","requestUsers","isFatching","compose"],"mappings":"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","file":"static/js/4.de1cf822.chunk.js","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\n            return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent;\n}","import PaginationBoxView from './PaginationBoxView';\n\nexport default PaginationBoxView;\n","'use strict';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount: PropTypes.number.isRequired,\n    pageRangeDisplayed: PropTypes.number.isRequired,\n    marginPagesDisplayed: PropTypes.number.isRequired,\n    previousLabel: PropTypes.node,\n    nextLabel: PropTypes.node,\n    breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    hrefBuilder: PropTypes.func,\n    onPageChange: PropTypes.func,\n    initialPage: PropTypes.number,\n    forcePage: PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName: PropTypes.string,\n    pageClassName: PropTypes.string,\n    pageLinkClassName: PropTypes.string,\n    activeClassName: PropTypes.string,\n    activeLinkClassName: PropTypes.string,\n    previousClassName: PropTypes.string,\n    nextClassName: PropTypes.string,\n    previousLinkClassName: PropTypes.string,\n    nextLinkClassName: PropTypes.string,\n    disabledClassName: PropTypes.string,\n    breakClassName: PropTypes.string,\n    breakLinkClassName: PropTypes.string,\n    extraAriaContext: PropTypes.string,\n    ariaLabelBuilder: PropTypes.func,\n  };\n\n  static defaultProps = {\n    pageCount: 10,\n    pageRangeDisplayed: 2,\n    marginPagesDisplayed: 3,\n    activeClassName: 'selected',\n    previousClassName: 'previous',\n    nextClassName: 'next',\n    previousLabel: 'Previous',\n    nextLabel: 'Next',\n    breakLabel: '...',\n    disabledClassName: 'disabled',\n    disableInitialCallback: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    let initialSelected;\n    if (props.initialPage) {\n      initialSelected = props.initialPage;\n    } else if (props.forcePage) {\n      initialSelected = props.forcePage;\n    } else {\n      initialSelected = 0;\n    }\n\n    this.state = {\n      selected: initialSelected,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      initialPage,\n      disableInitialCallback,\n      extraAriaContext,\n    } = this.props;\n    // Call the callback with the initialPage item:\n    if (typeof initialPage !== 'undefined' && !disableInitialCallback) {\n      this.callCallback(initialPage);\n    }\n\n    if (extraAriaContext) {\n      console.warn(\n        'DEPRECATED (react-paginate): The extraAriaContext prop is deprecated. You should now use the ariaLabelBuilder instead.'\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      typeof this.props.forcePage !== 'undefined' &&\n      this.props.forcePage !== prevProps.forcePage\n    ) {\n      this.setState({ selected: this.props.forcePage });\n    }\n  }\n\n  handlePreviousPage = evt => {\n    const { selected } = this.state;\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected > 0) {\n      this.handlePageSelected(selected - 1, evt);\n    }\n  };\n\n  handleNextPage = evt => {\n    const { selected } = this.state;\n    const { pageCount } = this.props;\n\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (selected < pageCount - 1) {\n      this.handlePageSelected(selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) return;\n\n    this.setState({ selected: selected });\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  getForwardJump() {\n    const { selected } = this.state;\n    const { pageCount, pageRangeDisplayed } = this.props;\n\n    const forwardJump = selected + pageRangeDisplayed;\n    return forwardJump >= pageCount ? pageCount - 1 : forwardJump;\n  }\n\n  getBackwardJump() {\n    const { selected } = this.state;\n    const { pageRangeDisplayed } = this.props;\n\n    const backwardJump = selected - pageRangeDisplayed;\n    return backwardJump < 0 ? 0 : backwardJump;\n  }\n\n  handleBreakClick = (index, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    const { selected } = this.state;\n\n    this.handlePageSelected(\n      selected < index ? this.getForwardJump() : this.getBackwardJump(),\n      evt\n    );\n  };\n\n  hrefBuilder(pageIndex) {\n    const { hrefBuilder, pageCount } = this.props;\n    if (\n      hrefBuilder &&\n      pageIndex !== this.state.selected &&\n      pageIndex >= 0 &&\n      pageIndex < pageCount\n    ) {\n      return hrefBuilder(pageIndex + 1);\n    }\n  }\n\n  ariaLabelBuilder(pageIndex) {\n    const selected = pageIndex === this.state.selected;\n    if (\n      this.props.ariaLabelBuilder &&\n      pageIndex >= 0 &&\n      pageIndex < this.props.pageCount\n    ) {\n      let label = this.props.ariaLabelBuilder(pageIndex + 1, selected);\n      // DEPRECATED: The extraAriaContext prop was used to add additional context\n      // to the aria-label. Users should now use the ariaLabelBuilder instead.\n      if (this.props.extraAriaContext && !selected) {\n        label = label + ' ' + this.props.extraAriaContext;\n      }\n      return label;\n    }\n  }\n\n  callCallback = selectedItem => {\n    if (\n      typeof this.props.onPageChange !== 'undefined' &&\n      typeof this.props.onPageChange === 'function'\n    ) {\n      this.props.onPageChange({ selected: selectedItem });\n    }\n  };\n\n  getPageElement(index) {\n    const { selected } = this.state;\n    const {\n      pageClassName,\n      pageLinkClassName,\n      activeClassName,\n      activeLinkClassName,\n      extraAriaContext,\n    } = this.props;\n\n    return (\n      <PageView\n        key={index}\n        onClick={this.handlePageSelected.bind(null, index)}\n        selected={selected === index}\n        pageClassName={pageClassName}\n        pageLinkClassName={pageLinkClassName}\n        activeClassName={activeClassName}\n        activeLinkClassName={activeLinkClassName}\n        extraAriaContext={extraAriaContext}\n        href={this.hrefBuilder(index)}\n        ariaLabel={this.ariaLabelBuilder(index)}\n        page={index + 1}\n      />\n    );\n  }\n\n  pagination = () => {\n    const items = [];\n    const {\n      pageRangeDisplayed,\n      pageCount,\n      marginPagesDisplayed,\n      breakLabel,\n      breakClassName,\n      breakLinkClassName,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    if (pageCount <= pageRangeDisplayed) {\n      for (let index = 0; index < pageCount; index++) {\n        items.push(this.getPageElement(index));\n      }\n    } else {\n      let leftSide = pageRangeDisplayed / 2;\n      let rightSide = pageRangeDisplayed - leftSide;\n\n      // If the selected page index is on the default right side of the pagination,\n      // we consider that the new right side is made up of it (= only one break element).\n      // If the selected page index is on the default left side of the pagination,\n      // we consider that the new left side is made up of it (= only one break element).\n      if (selected > pageCount - pageRangeDisplayed / 2) {\n        rightSide = pageCount - selected;\n        leftSide = pageRangeDisplayed - rightSide;\n      } else if (selected < pageRangeDisplayed / 2) {\n        leftSide = selected;\n        rightSide = pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n      let createPageView = index => this.getPageElement(index);\n\n      for (index = 0; index < pageCount; index++) {\n        page = index + 1;\n\n        // If the page index is lower than the margin defined,\n        // the page has to be displayed on the left side of\n        // the pagination.\n        if (page <= marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is greater than the page count\n        // minus the margin defined, the page has to be\n        // displayed on the right side of the pagination.\n        if (page > pageCount - marginPagesDisplayed) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index is near the selected page index\n        // and inside the defined range (pageRangeDisplayed)\n        // we have to display it (it will create the center\n        // part of the pagination).\n        if (index >= selected - leftSide && index <= selected + rightSide) {\n          items.push(createPageView(index));\n          continue;\n        }\n\n        // If the page index doesn't meet any of the conditions above,\n        // we check if the last item of the current \"items\" array\n        // is a break element. If not, we add a break element, else,\n        // we do nothing (because we don't want to display the page).\n        if (breakLabel && items[items.length - 1] !== breakView) {\n          breakView = (\n            <BreakView\n              key={index}\n              breakLabel={breakLabel}\n              breakClassName={breakClassName}\n              breakLinkClassName={breakLinkClassName}\n              onClick={this.handleBreakClick.bind(null, index)}\n            />\n          );\n          items.push(breakView);\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    const {\n      disabledClassName,\n      previousClassName,\n      nextClassName,\n      pageCount,\n      containerClassName,\n      previousLinkClassName,\n      previousLabel,\n      nextLinkClassName,\n      nextLabel,\n    } = this.props;\n\n    const { selected } = this.state;\n\n    const previousClasses =\n      previousClassName + (selected === 0 ? ` ${disabledClassName}` : '');\n    const nextClasses =\n      nextClassName +\n      (selected === pageCount - 1 ? ` ${disabledClassName}` : '');\n\n    const previousAriaDisabled = selected === 0 ? 'true' : 'false';\n    const nextAriaDisabled = selected === pageCount - 1 ? 'true' : 'false';\n\n    return (\n      <ul className={containerClassName}>\n        <li className={previousClasses}>\n          <a\n            onClick={this.handlePreviousPage}\n            className={previousLinkClassName}\n            href={this.hrefBuilder(selected - 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handlePreviousPage}\n            aria-disabled={previousAriaDisabled}\n          >\n            {previousLabel}\n          </a>\n        </li>\n\n        {this.pagination()}\n\n        <li className={nextClasses}>\n          <a\n            onClick={this.handleNextPage}\n            className={nextLinkClassName}\n            href={this.hrefBuilder(selected + 1)}\n            tabIndex=\"0\"\n            role=\"button\"\n            onKeyPress={this.handleNextPage}\n            aria-disabled={nextAriaDisabled}\n          >\n            {nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PageView = props => {\n  let pageClassName = props.pageClassName;\n  let pageLinkClassName = props.pageLinkClassName;\n\n  const onClick = props.onClick;\n  const href = props.href;\n  let ariaLabel =\n    props.ariaLabel ||\n    'Page ' +\n      props.page +\n      (props.extraAriaContext ? ' ' + props.extraAriaContext : '');\n  let ariaCurrent = null;\n\n  if (props.selected) {\n    ariaCurrent = 'page';\n\n    ariaLabel =\n      props.ariaLabel || 'Page ' + props.page + ' is your current page';\n\n    if (typeof pageClassName !== 'undefined') {\n      pageClassName = pageClassName + ' ' + props.activeClassName;\n    } else {\n      pageClassName = props.activeClassName;\n    }\n\n    if (typeof pageLinkClassName !== 'undefined') {\n      if (typeof props.activeLinkClassName !== 'undefined') {\n        pageLinkClassName = pageLinkClassName + ' ' + props.activeLinkClassName;\n      }\n    } else {\n      pageLinkClassName = props.activeLinkClassName;\n    }\n  }\n\n  return (\n    <li className={pageClassName}>\n      <a\n        onClick={onClick}\n        role=\"button\"\n        className={pageLinkClassName}\n        href={href}\n        tabIndex=\"0\"\n        aria-label={ariaLabel}\n        aria-current={ariaCurrent}\n        onKeyPress={onClick}\n      >\n        {props.page}\n      </a>\n    </li>\n  );\n};\n\nPageView.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  selected: PropTypes.bool.isRequired,\n  pageClassName: PropTypes.string,\n  pageLinkClassName: PropTypes.string,\n  activeClassName: PropTypes.string,\n  activeLinkClassName: PropTypes.string,\n  extraAriaContext: PropTypes.string,\n  href: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  page: PropTypes.number.isRequired,\n};\n\nexport default PageView;\n","'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BreakView = props => {\n  const { breakLabel, breakClassName, breakLinkClassName, onClick } = props;\n  const className = breakClassName || 'break';\n\n  return (\n    <li className={className}>\n      <a\n        className={breakLinkClassName}\n        onClick={onClick}\n        role=\"button\"\n        tabIndex=\"0\"\n        onKeyPress={onClick}\n      >\n        {breakLabel}\n      </a>\n    </li>\n  );\n};\n\nBreakView.propTypes = {\n  breakLabel: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  breakClassName: PropTypes.string,\n  breakLinkClassName: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default BreakView;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Users_container__1g6iF\",\"paginator\":\"Users_paginator__S_jb5\",\"paginatorItems\":\"Users_paginatorItems__1KPuP\",\"break\":\"Users_break__UvnXT\",\"next\":\"Users_next__1WuJ2\",\"previous\":\"Users_previous__3dWti\",\"paginatorItemsActive\":\"Users_paginatorItemsActive__R9aqu\",\"user\":\"Users_user__1_oz_\",\"avatar\":\"Users_avatar__3tuws\",\"img\":\"Users_img__2rTvd\",\"followButton\":\"Users_followButton__3O1px\",\"info\":\"Users_info__1V5w6\",\"name\":\"Users_name__14Zet\",\"location\":\"Users_location__2-GUy\",\"buttonContainer\":\"Users_buttonContainer__bxLps\",\"moreButton\":\"Users_moreButton__2Vl7W\"};","export const getUsers = (state) => {\n  return  state.usersPage.users;\n};\n\nexport const getTotalUsersCount = (state) => {\n  return  state.usersPage.totalUsersCount;\n};\n\nexport const getCurrentPage = (state) => {\n  return  state.usersPage.currentPage;\n};\n\nexport const getPageSize = (state) => {\n  return  state.usersPage.pageSize;\n};\n\nexport const getIsFetching = (state) => {\n  return  state.usersPage.isFetching;\n};\n\nexport const getIsFollowingInProgress = (state) => {\n  return  state.usersPage.isFollowingInProgress;\n};","import React from 'react';\nimport ReactPaginate from 'react-paginate';\nimport styles from './Users.module.css';\nimport userPhoto from './../../img/user1.png';\nimport Preloader from './../common/Preloader/Preloader';\nimport {NavLink} from 'react-router-dom';\n\nconst Users = (props) => {\n\n    const pageCount = Math.ceil( props.totalUsersCount / props.pageSize );\n\n    return (\n        <div className={styles.container}>\n            { props.isFetching ? <Preloader /> : null }\n            <ReactPaginate pageCount={pageCount}\n                           pageRangeDisplayed={3}\n                           marginPagesDisplayed={2}\n                           pageClassName={styles.paginatorItems}\n                           activeClassName={styles.paginatorItemsActive} c\n                           containerClassName={styles.paginator}\n                           onPageChange={(data) => props.setCurrentPage(data)}\n                           breakLabel={'...'}\n                           nextClassName={styles.next}\n                           previousClassName={styles.previous}\n                           breakClassName={styles.break}/>\n\n            {\n                props.users.map(user => <div className={styles.user} key={user.id}>\n                    <div className={styles.avatar}>\n                        <div>\n                            <NavLink to={`/profile/${user.id}`}>\n                                <img className={styles.img}\n                                     src={ user.photos.small ? user.photos.small : userPhoto } alt=\"ava\"/>\n                            </NavLink>\n                        </div>\n                        <div>\n                            { user.followed\n                                ? <button disabled={props.isFollowingInProgress.some(id => id === user.id)}\n                                          onClick={ () => { props.unfollow(user.id) } }\n                                          className={styles.followButton}>Unfollow</button>\n                                : <button disabled={props.isFollowingInProgress.some(id => id === user.id)}\n                                          onClick={ () => { props.follow(user.id) } }\n                                          className={styles.followButton}>Follow</button> }\n                        </div>\n                    </div>\n                    <div className={styles.info}>\n                        <NavLink to={`/profile/${user.id}`} className={styles.name}>\n                            <div className={styles.name}>\n                                {user.name}\n                            </div>\n                        </NavLink>\n                        <div>\n                            {user.status}\n                        </div>\n                    </div>\n                    <div className={styles.location}>\n                        <div>\n                            City: {\"user.location.city\"}\n                        </div>\n                        <div>\n                            Country: {\"user.location.country\"}\n                        </div>\n                    </div>\n                </div>)\n            }\n            <div className={styles.buttonContainer}>\n                <button className={styles.moreButton}>More Users</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Users;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {\n    getCurrentPage,\n    getIsFetching,\n    getIsFollowingInProgress,\n    getPageSize,\n    getTotalUsersCount,\n    getUsers\n} from \"../../redux/UsersSelectors\";\nimport {\n    follow,\n    unfollow,\n    setCurrentPage,\n    requestUsers\n} from './../../redux/UsersReducer';\nimport Users from './Users';\nimport {compose} from 'redux';\nimport {withAuthRedirect} from './../hoc/withAuthRedirect.jsx';\n\nclass UsersAPIContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\n    }\n\n    setCurrentPage = (data) => {\n        const currentPage = data.selected + 1;\n        this.props.setCurrentPage(currentPage);\n        this.props.requestUsers(currentPage, this.props.pageSize);\n    };\n\n    render() {\n        return (<Users setCurrentPage={this.setCurrentPage}\n                       totalUsersCount={this.props.totalUsersCount}\n                       pageSize={this.props.pageSize}\n                       users={this.props.users}\n                       follow={this.props.follow}\n                       unfollow={this.props.unfollow}\n                       isFatching={this.props.isFetching}\n                       isFollowingInProgress={this.props.isFollowingInProgress}\n        />);\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        pageSize: getPageSize(state),\n        isFetching: getIsFetching(state),\n        isFollowingInProgress: getIsFollowingInProgress(state)\n    }\n};\n\nexport default compose(withAuthRedirect,\n    connect(mapStateToProps, {\n        follow, unfollow, setCurrentPage, requestUsers\n    }))(UsersAPIContainer);"],"sourceRoot":""}