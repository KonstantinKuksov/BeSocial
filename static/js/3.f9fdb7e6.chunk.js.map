{"version":3,"sources":["components/hoc/withAuthRedirect.jsx","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/NewMessage/NewMessage.jsx","components/Dialogs/NewMessage/NewMessageContainer.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","styles","dialog","nonActive","activeClassName","active","name","Message","message","maxLength30","maxLengthCreator","NewMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","buttons","button","post","NewMessage","container","values","addMessage","newMessageBody","NewMessageContainer","Dialogs","dialogs","dialogsItem","messagesContainer","messages","messagesItem","compose","dialogsPage","map","dispatch"],"mappings":"oNAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,iLAInC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAI,eAJV,GAEXC,IAAML,WAStC,OAFqCM,YAAQX,EAARW,CAAoCL,K,oBChB7EM,EAAOC,QAAU,CAAC,OAAS,2BAA2B,UAAY,8BAA8B,OAAS,6B,oBCAzGD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,QAAU,yBAAyB,kBAAoB,mCAAmC,SAAW,4B,sFCc/IC,EAXI,SAACN,GAEnB,IAAMO,EAAI,mBAAeP,EAAMQ,IAE/B,OACC,yBAAKC,UAAWC,IAAOC,QACtB,kBAAC,IAAD,CAASV,GAAIM,EAAME,UAAWC,IAAOE,UAAWC,gBAAiBH,IAAOI,QAASd,EAAMe,Q,kBCC3EC,EARC,SAAChB,GAChB,OACC,yBAAKS,UAAWC,IAAOO,SACrBjB,EAAMiB,U,8ECAJC,EAAcC,YAAiB,IAgC/BC,EAAsBC,YAAU,CAClCC,KAAM,yBADkBD,EA9BL,SAACrB,GAEpB,OACI,0BAAMuB,SAAUvB,EAAMwB,cACd,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAW,CAAEC,IAAUX,GACvBH,KAAM,iBACNe,YAAa,oBAExB,yBAAKrB,UAAWC,IAAOqB,SACnB,4BAAQtB,UAAS,UAAKC,IAAOsB,OAAZ,YAAsBtB,IAAOuB,OAA9C,eAwBDC,EAjBI,SAAClC,GAMhB,OACI,yBAAKS,UAAWC,IAAOyB,WACnB,kBAACf,EAAD,CAAqBG,SANP,SAACa,GACnBpC,EAAMqC,WAAWD,EAAOE,qB,QCfjBC,EAFapC,aANJ,SAACV,GACrB,MAAO,KAK0C,CAAC4C,gBAA1BlC,CAAuC+B,GCUpDM,EAjBC,SAACxC,GAEjB,OACE,yBAAKS,UAAWC,IAAOyB,WACtB,yBAAK1B,UAAWC,IAAO+B,SACrBzC,EAAM0C,aAER,yBAAKjC,UAAWC,IAAOiC,mBACtB,yBAAKlC,UAAWC,IAAOkC,UACrB5C,EAAM6C,cAER,kBAAC,EAAD,S,gBCWWC,sBACX3C,aAnBoB,SAACV,GAQrB,MAAO,CACHiD,YAPcjD,EAAMsD,YAAYN,QAC/BO,KAAI,SAAArC,GAAM,OAAI,kBAAC,EAAD,CAAYH,GAAIG,EAAOH,GAAIO,KAAMJ,EAAOI,UAOvD8B,aALepD,EAAMsD,YAAYH,SAChCI,KAAI,SAAA/B,GAAO,OAAI,kBAAC,EAAD,CAAST,GAAIS,EAAQT,GAAIS,QAASA,EAAQA,iBAQvC,SAACgC,GACxB,MAAO,MAKPrD,IAFWkD,CAGbN","file":"static/js/3.f9fdb7e6.chunk.js","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\n            return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3W62y\",\"nonActive\":\"DialogItem_nonActive__2daMY\",\"active\":\"DialogItem_active__1VsCP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1ULAU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dialogs_container__2yH3n\",\"dialogs\":\"Dialogs_dialogs__2InRE\",\"messagesContainer\":\"Dialogs_messagesContainer__hoOrK\",\"messages\":\"Dialogs_messages__J8uSF\"};","import React from 'react';\nimport styles from './DialogItem.module.css';\nimport {NavLink} from 'react-router-dom';\n\nconst DialogItem = (props) => {\n\n\tconst path = `/dialogs/${props.id}`;\n\n\treturn (\n\t\t<div className={styles.dialog}>\n\t\t\t<NavLink to={path} className={styles.nonActive} activeClassName={styles.active}>{props.name}</NavLink>\n\t\t</div>\n\t)\n};\n\nexport default DialogItem;","import React from 'react';\nimport styles from './Message.module.css';\n\nconst Message = (props) => {\n\treturn (\n\t\t<div className={styles.message}>\n\t\t\t{props.message}\n\t\t</div>\n\t)\n};\n\nexport default Message;","import React from 'react';\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\nimport styles from './../../Profile/MyPosts/NewPost/NewPost.module.css';\nimport {Field, reduxForm} from 'redux-form';\n\nconst maxLength30 = maxLengthCreator(30);\n\nconst NewMessageForm = (props) => {\n\n    return (\n        <form onSubmit={props.handleSubmit}>\n                <Field component={Textarea}\n                       validate={ [ required, maxLength30 ] }\n                       name={\"newMessageBody\"}\n                       placeholder={\"Your message...\"}>\n                </Field>\n            <div className={styles.buttons}>\n                <button className={`${styles.button} ${styles.post}`}> Send </button>\n                {/*<button className={`${styles.button} ${styles.clear}`}> Clear </button>*/}\n            </div>\n        </form>\n    )\n};\n\nconst NewMessage = (props) => {\n\n    const addNewMessage = (values) => {\n        props.addMessage(values.newMessageBody);\n    };\n\n    return (\n        <div className={styles.container}>\n            <NewMessageFormRedux onSubmit={addNewMessage}/>\n        </div>\n    )\n};\n\nconst NewMessageFormRedux = reduxForm({\n    form: 'dialogsNewMessageForm'\n})(NewMessageForm);\n\nexport default NewMessage;","import React from 'react';\nimport {addMessage} from './../../../redux/DialogsReducer';\nimport NewMessage from './NewMessage';\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n};\n\nconst NewMessageContainer = connect(mapStateToProps, {addMessage})(NewMessage);\n\nexport default NewMessageContainer;","import React from 'react';\nimport styles from './Dialogs.module.css';\nimport NewMessageContainer from './NewMessage/NewMessageContainer';\n\nconst Dialogs = (props) => {\n\nreturn (\n\t\t<div className={styles.container}>\n\t\t\t<div className={styles.dialogs}>\n\t\t\t\t{props.dialogsItem}\n\t\t\t</div>\n\t\t\t<div className={styles.messagesContainer}>\n\t\t\t\t<div className={styles.messages}>\n\t\t\t\t\t{props.messagesItem}\n\t\t\t\t</div>\n\t\t\t\t<NewMessageContainer />\n\t\t\t</div>\n\t\t</div>\n\t)\n};\n\nexport default Dialogs;","import React from 'react';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport Dialogs from './Dialogs';\nimport {connect} from 'react-redux';\nimport {withAuthRedirect} from './../hoc/withAuthRedirect.jsx';\nimport {compose} from 'redux';\n\nconst mapStateToProps = (state) => {\n\n    let dialogsItem = state.dialogsPage.dialogs\n        .map(dialog => <DialogItem id={dialog.id} name={dialog.name}/>);\n\n    let messagesItem = state.dialogsPage.messages\n        .map(message => <Message id={message.id} message={message.message}/>);\n\n    return {\n        dialogsItem: dialogsItem,\n        messagesItem: messagesItem\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {}\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);"],"sourceRoot":""}